version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: anime-blog-db
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: ${MONGO_DB:-anime-blog}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - anime-blog-network

  # Application
  app:
    build: .
    container_name: anime-blog-app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/anime-blog?authSource=admin
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      CLIENT_URL: ${CLIENT_URL:-http://localhost:3000}
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    volumes:
      - ./server/uploads:/app/server/uploads
    networks:
      - anime-blog-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: anime-blog-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - anime-blog-network

volumes:
  mongodb_data:

networks:
  anime-blog-network:
    driver: bridge